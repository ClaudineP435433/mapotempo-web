<p id="notice"><%= notice %></p>

<div id="planning" class="col-lg-3"></div>
<div class="fill col-lg-9">
<div id="map"></div>
</div>

<script>
var map = L.map('map').setView([<%= @planning.user.store.lat %>, <%= @planning.user.store.lng %>], 13);
var layers = {};
<% @planning.routes.each{ |route| %>
  layers[<%= route.id %>] = L.layerGroup();
<% } %>
var markers = {};

L.tileLayer('<%= current_user.layer.url %>', {
  maxZoom: 18,
  attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <%= current_user.layer.attribution %>'
}).addTo(map);

function update_planning(event, ui) {
  var data = $('#planning > ol > li').map(function(){
    return {
      'route': $(this).attr("data-route_id"),
      'destinations': $('li[data-destination_id]', $(this)).map(function(){
        return {'id': parseInt($(this).attr("data-destination_id")), 'active': $('input', $(this)).is(':checked')};
      }).get() };
  }).get();
  $.ajax({
    type: "patch",
    data: JSON.stringify(data),
    contentType: 'application/json',
    url: '<%= planning_move_path(@planning, format: :json) %>',
    success: display_planning,
  });
}

function display_planning(data) {
  $("#planning").html(SMT['plannings/show'](data));

  $("#planning input:checkbox").change(update_planning);

  $.each(data.routes, function(i, route) {
    map.removeLayer(layers[route.id]);
    layers[route.id] = L.layerGroup();
    if(!route.hidden) {
      layers[route.id].addTo(map);
    }

    var color;
    if(route.vehicle) {
      $(".route[data-route_id="+route.id+"] select").val(route.vehicle.id);
      color = route.vehicle.color;
    }

    $.each(route.stops, function(index, stop) {
      if(stop.trace) {
        var polyline = L.Polyline.fromEncoded(stop.trace);
        L.polyline(polyline.getLatLngs(), {color: color}).addTo(layers[route.id]);
      }
      if(stop.destination.lat && stop.destination.lng) {
        markers[stop.destination.id] = L.marker(new L.LatLng(stop.destination.lat, stop.destination.lng), {
          icon: new L.NumberedDivIcon({
            number: index+1,
            iconUrl: (index==0 || !color)? '<%= asset_path("marker-000000.svg") %>' : route.icon
          }),
        }).addTo(layers[route.id]).bindPopup(SMT['stops/show'](stop));
      }
    });
  });

  $("#out_of_road").sortable({
    connectWith: ".sortable",
    update: update_planning,
  }).disableSelection();
  $(".stops").sortable({
    connectWith: ".sortable",
    items: "li:not(:first, :last, .placeholder)",
    update: update_planning,
  }).disableSelection();

  $("select").select2({minimumResultsForSearch:99});
  $("select").change(function() {
    $.ajax({
      type: "patch",
      data: JSON.stringify({
        route_id: $(this).closest("[data-route_id]").attr("data-route_id"),
        vehicle_id: $(this).val()
      }),
      contentType: 'application/json',
      url: '<%= planning_switch_path(@planning, format: :json) %>',
      success: display_planning,
    });
  });

  $("#refresh").click(function(event, ui) {
    $.ajax({
      type: "get",
      url: '<%= planning_refresh_path(@planning, format: :json) %>',
      success: display_planning,
    });
  });

  $(".toggle").click(function(event, ui) {
    var id = $(this).closest("[data-route_id]").attr("data-route_id");
    var li = $("ul, ol", $(this).closest("li"));
    li.toggle();
    var hidden = !li.is(":visible");
    $.ajax({
      type: "patch",
      data: JSON.stringify({route:{hidden: hidden}}),
      contentType: 'application/json',
      url: '/routes/'+id+'.json'
    });

    if(hidden) {
      map.removeLayer(layers[id]);
    } else {
      layers[id].addTo(map);
    }
  });

  $(".lock").click(function(event, ui) {
    var id = $(this).closest("[data-route_id]").attr("data-route_id");
    var i = $("i", this);
    i.toggleClass("icon-lock");
    i.toggleClass("icon-unlock");
    var locked = i.hasClass("icon-lock");
    $.ajax({
      type: "patch",
      data: JSON.stringify({route:{locked: locked}}),
      contentType: 'application/json',
      url: '/routes/'+id+'.json'
    });
  });

  $(".marker").click(function(event, ui) {
    var id = $(this).closest("[data-destination_id]").attr("data-destination_id");
    if(id in markers) {
      map.setView(markers[id].getLatLng(), 16);
    }
    return false;
  });
}

$.ajax({
  url: '<%= polymorphic_path(@planning, format: :json) %>',
  success: display_planning,
});
</script>
